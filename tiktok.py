import logging
import requests
from aiogram import Bot, Dispatcher, types
from aiogram.types import ParseMode
from aiogram.utils import executor
from aiogram.dispatcher.filters import CommandStart
from aiogram.contrib.middlewares.logging import LoggingMiddleware

API_TOKEN = '7755541704:AAGkzAZZ-Sigl4SF8dw8UUtGO1HD4oeMews'  # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)
dp.middleware.setup(LoggingMiddleware())


def get_tiktok_data(url):
    api_url = f"https://tikwm.com/api/?url={url}"
    response = requests.get(api_url)
    if response.status_code == 200:
        return response.json()
    return None


@dp.message_handler(CommandStart())
async def start_cmd(message: types.Message):
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ TikTok-–≤–∏–¥–µ–æ, –∏ —è —Å–∫–∞—á–∞—é –µ–≥–æ –±–µ–∑ –≤–æ–¥—è–Ω–æ–≥–æ –∑–Ω–∞–∫–∞!")


@dp.message_handler(lambda message: 'tiktok.com' in message.text or 'vt.tiktok.com' in message.text)
async def handle_tiktok(message: types.Message):
    await message.answer("‚è≥ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é...")

    result = get_tiktok_data(message.text)
    if not result or result.get("code") != 0:
        await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Å—Å—ã–ª–∫—É. –ü—Ä–æ–≤–µ—Ä—å –µ—ë –∏ –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.")
        return

    data = result["data"]

    if "images" in data and data["images"]:
        # –ü–æ—Å—Ç —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ (—Ñ–æ—Ç–æ –∏–ª–∏ –∫–∞—Ä—É—Å–µ–ª—å)
        for img_url in data["images"]:
            await message.answer_photo(img_url)
        await message.answer("‚úÖ –í–æ—Ç —Ç–≤–æ–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–µ–∑ –≤–æ–¥—è–Ω–æ–≥–æ –∑–Ω–∞–∫–∞.")
    elif "play" in data and data["play"]:
        # –í–∏–¥–µ–æ
        await message.answer_video(data["play"])
        await message.answer("‚úÖ –í–æ—Ç —Ç–≤–æ—ë –≤–∏–¥–µ–æ –±–µ–∑ –≤–æ–¥—è–Ω–æ–≥–æ –∑–Ω–∞–∫–∞.")
    else:
        await message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤–∏–¥–µ–æ –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.")


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)