import logging
import requests
import re
import os
import mimetypes
import tempfile
from aiogram import Bot, Dispatcher, types, executor

# === üîë –¢–≤–æ–π API —Ç–æ–∫–µ–Ω ===
API_TOKEN = '7755541704:AAGkzAZZ-Sigl4SF8dw8UUtGO1HD4oeMews'

# === ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ ===
logging.basicConfig(level=logging.INFO)
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# === –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Å—ã–ª–∫–∏ TikTok ===
def is_valid_tiktok_url(url):
    return re.match(r'https?://(vm\.tiktok\.com|vt\.tiktok\.com|www\.tiktok\.com)/', url)

# === –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –∫–æ—Ä–æ—Ç–∫—É—é —Å—Å—ã–ª–∫—É (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ) ===
def expand_short_url(url):
    try:
        session = requests.Session()
        response = session.head(url, allow_redirects=True, timeout=5)
        return response.url
    except Exception as e:
        print(f"[expand_short_url] –û—à–∏–±–∫–∞: {e}")
        return url

# === –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ TikWM API ===
def get_media_data(tiktok_url):
    api_url = 'https://tikwm.com/api/'
    try:
        resp = requests.get(api_url, params={'url': tiktok_url}, timeout=10)
        data = resp.json()

        if data.get("code") != 0:
            print(f"[get_media_data] –û—à–∏–±–∫–∞ TikWM: {data}")
            return None

        result = data["data"]
        if result.get("play"):
            return {"type": "video", "url": result["play"]}

        if result.get("images") and isinstance(result["images"], list):
            return {"type": "images", "urls": result["images"]}

        print(f"[get_media_data] –ù–µ—Ç –≤–∏–¥–µ–æ –∏–ª–∏ —Ñ–æ—Ç–æ. –û—Ç–≤–µ—Ç: {result}")
        return None

    except Exception as e:
        print(f"[get_media_data] –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return None

# === –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∫–∞–∫ –∞–ª—å–±–æ–º–∞ ===
async def send_images(chat_id, urls):
    files = []
    try:
        for i, url in enumerate(urls[:10]):
            response = requests.get(url, timeout=10)
            if response.status_code == 200:
                ext = mimetypes.guess_extension(response.headers['Content-Type']) or '.jpg'
                tmp_file = tempfile.NamedTemporaryFile(delete=False, suffix=ext)
                tmp_file.write(response.content)
                tmp_file.close()
                files.append(tmp_file.name)

        media = [types.InputMediaPhoto(types.InputFile(f)) for f in files]
        await bot.send_media_group(chat_id=chat_id, media=media)
    except Exception as e:
        print(f"[send_images] –û—à–∏–±–∫–∞: {e}")
        await bot.send_message(chat_id, "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.")
    finally:
        for f in files:
            try:
                os.unlink(f)
            except:
                pass

# === –ö–æ–º–∞–Ω–¥–∞ /start ===
@dp.message_handler(commands=['start'])
async def start_handler(message: types.Message):
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ TikTok ‚Äî —è —Å–∫–∞—á–∞—é –≤–∏–¥–µ–æ –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–µ–∑ –≤–æ–¥—è–Ω–æ–≥–æ –∑–Ω–∞–∫–∞!")

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π —Å TikTok-—Å—Å—ã–ª–∫–∞–º–∏ ===
@dp.message_handler()
async def download_handler(message: types.Message):
    url = message.text.strip()

    if not is_valid_tiktok_url(url):
        await message.reply("‚ùó –≠—Ç–æ –Ω–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ TikTok-—Å—Å—ã–ª–∫—É.")
        return

    await message.reply("üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é...")

    full_url = expand_short_url(url)
    media = get_media_data(full_url)

    if not media:
        await message.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å. –í–æ–∑–º–æ–∂–Ω–æ, —Å—Å—ã–ª–∫–∞ –±–∏—Ç–∞—è –∏–ª–∏ –ø–æ—Å—Ç –ø—Ä–∏–≤–∞—Ç–Ω—ã–π.")
        return

    if media["type"] == "video":
        try:
            await bot.send_video(chat_id=message.chat.id, video=media["url"], caption="‚úÖ –í–æ—Ç —Ç–≤–æ—ë –≤–∏–¥–µ–æ –±–µ–∑ –≤–æ–¥—è–Ω–æ–≥–æ –∑–Ω–∞–∫–∞")
        except Exception as e:
            print(f"[send_video] –û—à–∏–±–∫–∞: {e}")
            await message.reply(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ. –í–æ—Ç —Å—Å—ã–ª–∫–∞:\n{media['url']}")

    elif media["type"] == "images":
        await send_images(message.chat.id, media["urls"])
        await message.reply("üì∑ –í–æ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ TikTok-–ø–æ—Å—Ç–∞")

# === –ó–∞–ø—É—Å–∫ ===
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)