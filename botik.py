import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞
BOT_TOKEN = "7755541704:AAHINZn-mtLddqc7RJV1VHCpE6AbAzwAAuI"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω!
ADMIN_ID = 7091921882  # –í–∞—à Telegram ID
CHATS_FILE = "chats.txt"
IGNORED_USERS_FILE = "ignored_users.txt"
TRACKING_ENABLED = True

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤ (–∏–∑ txt)
def load_chats():
    try:
        with open(CHATS_FILE, "r") as f:
            return [line.strip() for line in f if line.strip()]
    except FileNotFoundError:
        return []

# –ó–∞–≥—Ä—É–∑–∫–∞ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∏–∑ txt)
def load_ignored_users():
    try:
        with open(IGNORED_USERS_FILE, "r") as f:
            return [line.strip() for line in f if line.strip()]
    except FileNotFoundError:
        return []

async def is_admin(user_id):
    return user_id == ADMIN_ID

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    if not await is_admin(message.from_user.id):
        await message.reply("‚ö†Ô∏è –ë–æ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É")
        return
    await message.reply(
        "ü§ñ –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –±–æ—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —á–∞—Ç–æ–≤\n\n"
        "‚ÑπÔ∏è –ß–∞—Ç—ã –∏ –∏–≥–Ω–æ—Ä-–ª–∏—Å—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä—É—é—Ç—Å—è –≤—Ä—É—á–Ω—É—é:\n"
        f"- –ß–∞—Ç—ã: {CHATS_FILE}\n"
        f"- –ò–≥–Ω–æ—Ä: {IGNORED_USERS_FILE}\n\n"
        "–ö–æ–º–∞–Ω–¥—ã:\n"
        "/tracking - –≤–∫–ª/–≤—ã–∫–ª –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ\n"
        "/chats - –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ —á–∞—Ç—ã\n"
        "/ignored - –ø–æ–∫–∞–∑–∞—Ç—å –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã—Ö"
    )

# –ö–æ–º–∞–Ω–¥–∞ /tracking (–≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥)
@dp.message(Command("tracking"))
async def cmd_tracking(message: types.Message):
    if not await is_admin(message.from_user.id):
        return

    global TRACKING_ENABLED
    TRACKING_ENABLED = not TRACKING_ENABLED
    status = "‚úÖ –í–∫–ª—é—á–µ–Ω–æ" if TRACKING_ENABLED else "‚ùå –í—ã–∫–ª—é—á–µ–Ω–æ"
    await message.reply(f"–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π: {status}")

# –ö–æ–º–∞–Ω–¥–∞ /chats (–ø–æ–∫–∞–∑–∞—Ç—å —á–∞—Ç—ã)
@dp.message(Command("chats"))
async def cmd_chats(message: types.Message):
    if not await is_admin(message.from_user.id):
        return

    chats = load_chats()
    if not chats:
        await message.reply("üì≠ –°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ –ø—É—Å—Ç.")
        return

    await message.reply("üìã –¢–µ–∫—É—â–∏–µ —á–∞—Ç—ã:\n" + "\n".join(chats))

# –ö–æ–º–∞–Ω–¥–∞ /ignored (–ø–æ–∫–∞–∑–∞—Ç—å –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã—Ö)
@dp.message(Command("ignored"))
async def cmd_ignored(message: types.Message):
    if not await is_admin(message.from_user.id):
        return

    ignored_users = load_ignored_users()
    if not ignored_users:
        await message.reply("üì≠ –°–ø–∏—Å–æ–∫ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã—Ö –ø—É—Å—Ç.")
        return

    await message.reply("üìã –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:\n" + "\n".join(ignored_users))

# –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.message()
async def track_message(message: types.Message):
    if not TRACKING_ENABLED:
        return

    if not await is_admin(message.from_user.id):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∏–≥–Ω–æ—Ä-–ª–∏—Å—Ç–µ
        if str(message.from_user.id) in load_ignored_users():
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è –ª–∏ —á–∞—Ç
        if str(message.chat.id) not in load_chats():
            return

        # –§–æ—Ä–º–∏—Ä—É–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        user = message.from_user
        chat = message.chat
        message_link = (
            f"https://t.me/{chat.username}/{message.message_id}"
            if chat.username
            else f"–°–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ (ID: {chat.id})"
        )
        text = (
            f"üì® –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n"
            f"üë§ –û—Ç: @{user.username or user.first_name} (ID: {user.id})\n"
            f"üí¨ –ß–∞—Ç: {chat.title or '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}\n"
            f"üîó –°—Å—ã–ª–∫–∞: {message_link}\n"
            f"üìù –¢–µ–∫—Å—Ç: {message.text or '–ù–µ—Ç —Ç–µ–∫—Å—Ç–∞ (–≤–æ–∑–º–æ–∂–Ω–æ, –º–µ–¥–∏–∞)'}"
        )
        await bot.send_message(ADMIN_ID, text)

async def main():
    logger.info("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
